package crb_web

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"crb/models"
)

/*DeleteCopyOK Success - Successful operation

swagger:response deleteCopyOK
*/
type DeleteCopyOK struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewDeleteCopyOK creates DeleteCopyOK with default headers values
func NewDeleteCopyOK() *DeleteCopyOK {
	return &DeleteCopyOK{}
}

// WithPayload adds the payload to the delete copy o k response
func (o *DeleteCopyOK) WithPayload(payload string) *DeleteCopyOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete copy o k response
func (o *DeleteCopyOK) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteCopyOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

/*DeleteCopyNotFound Copy instance of specified copyId does not exist

swagger:response deleteCopyNotFound
*/
type DeleteCopyNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewDeleteCopyNotFound creates DeleteCopyNotFound with default headers values
func NewDeleteCopyNotFound() *DeleteCopyNotFound {
	return &DeleteCopyNotFound{}
}

// WithPayload adds the payload to the delete copy not found response
func (o *DeleteCopyNotFound) WithPayload(payload *models.Error) *DeleteCopyNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete copy not found response
func (o *DeleteCopyNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteCopyNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*DeleteCopyInternalServerError Internal error -- Most likely Metadata-DB could not be accessed


swagger:response deleteCopyInternalServerError
*/
type DeleteCopyInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewDeleteCopyInternalServerError creates DeleteCopyInternalServerError with default headers values
func NewDeleteCopyInternalServerError() *DeleteCopyInternalServerError {
	return &DeleteCopyInternalServerError{}
}

// WithPayload adds the payload to the delete copy internal server error response
func (o *DeleteCopyInternalServerError) WithPayload(payload *models.Error) *DeleteCopyInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete copy internal server error response
func (o *DeleteCopyInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteCopyInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*DeleteCopyDefault unexpected error

swagger:response deleteCopyDefault
*/
type DeleteCopyDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewDeleteCopyDefault creates DeleteCopyDefault with default headers values
func NewDeleteCopyDefault(code int) *DeleteCopyDefault {
	if code <= 0 {
		code = 500
	}

	return &DeleteCopyDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the delete copy default response
func (o *DeleteCopyDefault) WithStatusCode(code int) *DeleteCopyDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the delete copy default response
func (o *DeleteCopyDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the delete copy default response
func (o *DeleteCopyDefault) WithPayload(payload *models.Error) *DeleteCopyDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete copy default response
func (o *DeleteCopyDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteCopyDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
