package crb_web

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// CreateCopyHandlerFunc turns a function with the right signature into a create copy handler
type CreateCopyHandlerFunc func(CreateCopyParams) middleware.Responder

// Handle executing the request and returning a response
func (fn CreateCopyHandlerFunc) Handle(params CreateCopyParams) middleware.Responder {
	return fn(params)
}

// CreateCopyHandler interface for that can handle valid create copy params
type CreateCopyHandler interface {
	Handle(CreateCopyParams) middleware.Responder
}

// NewCreateCopy creates a new http.Handler for the create copy operation
func NewCreateCopy(ctx *middleware.Context, handler CreateCopyHandler) *CreateCopy {
	return &CreateCopy{Context: ctx, Handler: handler}
}

/*CreateCopy swagger:route POST /copies/{copyId}/data crb-web createCopy

Create copy -- store copy data

Store copy instance data in filesystem repo and create a Metadata-DB entry for this copy

*/
type CreateCopy struct {
	Context *middleware.Context
	Handler CreateCopyHandler
}

func (o *CreateCopy) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, _ := o.Context.RouteInfo(r)
	var Params = NewCreateCopyParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
