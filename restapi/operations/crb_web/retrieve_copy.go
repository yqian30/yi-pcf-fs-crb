package crb_web

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// RetrieveCopyHandlerFunc turns a function with the right signature into a retrieve copy handler
type RetrieveCopyHandlerFunc func(RetrieveCopyParams) middleware.Responder

// Handle executing the request and returning a response
func (fn RetrieveCopyHandlerFunc) Handle(params RetrieveCopyParams) middleware.Responder {
	return fn(params)
}

// RetrieveCopyHandler interface for that can handle valid retrieve copy params
type RetrieveCopyHandler interface {
	Handle(RetrieveCopyParams) middleware.Responder
}

// NewRetrieveCopy creates a new http.Handler for the retrieve copy operation
func NewRetrieveCopy(ctx *middleware.Context, handler RetrieveCopyHandler) *RetrieveCopy {
	return &RetrieveCopy{Context: ctx, Handler: handler}
}

/*RetrieveCopy swagger:route GET /copies/{copyId}/data crb-web retrieveCopy

Retrieve copy data

Copy instance data is fetched from copy-repo and streamed back

*/
type RetrieveCopy struct {
	Context *middleware.Context
	Handler RetrieveCopyHandler
}

func (o *RetrieveCopy) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, _ := o.Context.RouteInfo(r)
	var Params = NewRetrieveCopyParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
